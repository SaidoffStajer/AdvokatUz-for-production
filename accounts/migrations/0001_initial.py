# Generated by Django 4.2 on 2024-11-12 13:03

import accounts.managers
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Telefon raqami notogri formatda', regex='^\\+998\\d{9}$')])),
                ('full_name', models.CharField(max_length=250)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('auth_type', models.CharField(choices=[('telefon raqam', 'telefon raqam'), ('google', 'google'), ('facebook', 'facebook'), ('linkedin', 'linkedin')], max_length=50)),
                ('user_role', models.CharField(choices=[('advokat', 'advokat'), ('foydalanuvchi', 'foydalanuvchi')], max_length=50)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='media/accounts/user/profile-image/')),
                ('gender', models.CharField(choices=[('erkak', 'erkak'), ('ayol', 'ayol')], max_length=50)),
                ('location_text', models.CharField(blank=True, max_length=250, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'userlar',
            },
            managers=[
                ('objects', accounts.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'shahar',
                'verbose_name_plural': 'shaharlar',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'davlat',
                'verbose_name_plural': 'davlatlar',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'tillar',
                'verbose_name_plural': 'til',
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120)),
            ],
            options={
                'verbose_name': 'mutaxasisligi',
                'verbose_name_plural': 'mutaxasisliklari',
            },
        ),
        migrations.CreateModel(
            name='UserConformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=50)),
                ('expires', models.DateTimeField(blank=True, null=True)),
                ('is_used', models.BooleanField(default=False)),
                ('code_type', models.CharField(choices=[('register uchun', 'register uchun'), ('forgot password uchun', 'forgot password uchun')], max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conformations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tasdiqlash kodi',
                'verbose_name_plural': 'Tasdiqlash kodlari',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regions', to='accounts.city')),
            ],
            options={
                'verbose_name': 'tuman',
                'verbose_name_plural': 'tumanlar',
            },
        ),
        migrations.CreateModel(
            name='LawyerRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rate', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lawyer_rate', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'sharx',
                'verbose_name_plural': 'sharxlar',
            },
        ),
        migrations.CreateModel(
            name='Lawyer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation', models.CharField(choices=[('free', 'free'), ('standard', 'standard'), ('pro', 'pro'), ('premium', 'premium')], max_length=250)),
                ('consultation_price', models.CharField(max_length=100)),
                ('work_place', models.CharField(max_length=50)),
                ('license_date', models.DateField(blank=True, null=True)),
                ('license_status', models.CharField(choices=[('faol', 'faol'), ('faolemas', 'faolemas')], max_length=250)),
                ('bio', models.TextField()),
                ('telegram', models.CharField(max_length=250)),
                ('whatsapp', models.CharField(max_length=250)),
                ('inter_expires_has', models.BooleanField(default=False)),
                ('experience', models.CharField(max_length=250)),
                ('type', models.CharField(choices=[('freelancer', 'freelancer'), ('ishchi', 'ishchi')], max_length=250)),
                ('card', models.CharField(max_length=250)),
                ('language', models.ManyToManyField(related_name='lawyers', to='accounts.language')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lawyers', to='accounts.profession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lawyers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'advokat',
                'verbose_name_plural': 'advokatlar',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('extra_phone', models.CharField(blank=True, max_length=23, null=True, validators=[django.core.validators.RegexValidator(message='Telefon raqami notogri formatda', regex='^\\+998\\d{9}$')])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'foydalanuchi',
                'verbose_name_plural': 'foydalanuchilar',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='accounts.country'),
        ),
    ]
